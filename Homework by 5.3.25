*Задание №1*
```sh
func countUniqueWords(_ inputString: String) {
    let words = inputString.lowercased().split(separator: " ")
    let uniqueWords = Set(words)
    print("Количество уникальных слов:", uniqueWords.count)
}

let string1 = "apple Orange pineapple PEAR"
countUniqueWords(string1) 

let string2 = "apple aPPle appLe Apple"
countUniqueWords(string2) 
```
*Задание №2*
```sh
func checkValidParentheses(_ parentheses: String) {
    var stack = [Character]()
    for char in parentheses {
        if char == "(" {
            stack.append(char)
        } else if char == ")" {
            guard !stack.isEmpty else {
                print("Некорректная")
                return
            }
            stack.removeLast()
        }
    }
    
    if stack.isEmpty {
        print("Корректная")
    } else {
        print("Некорректная")
    }
}

checkValidParentheses("(())")
checkValidParentheses("))((")
checkValidParentheses("()()()")
```


*Задание №3*
```sh
import Foundation

let array1 = ["a", "bb", "b", "cccc"]
let array2 = ["a", "b", "c"]

func groupStringsByLength(_ strings: [String]) -> [Int: [String]] {
    var result: [Int: [String]] = [:]
    
    for string in strings {
        let length = string.count
        if var existingGroup = result[length] {
            existingGroup.append(string)
            result[length] = existingGroup
        } else {
            result[length] = [string]
        }
    }
    
    return result
}

let groupedArray1 = groupStringsByLength(array1)
for (length, strings) in groupedArray1 {
    print("\(length) - \(strings)")
}

let groupedArray2 = groupStringsByLength(array2)
for (length, strings) in groupedArray2 {
    print("\(length) - \(strings)")
}
```


*Задание №4*
```sh
func calculateAverageGrade(_ dictionary: [String: Int?]) {
    let nonNilStudents = dictionary.compactMapValues { $0 }
    guard !nonNilStudents.isEmpty else {
        print("Никто не сдал")
        return
    }

    let grades = Array(nonNilStudents.values)
    let average = Double(grades.reduce(0, +)) / Double(grades.count)
    print("Средняя оценка: \(average)")
}

let grade1: [String: Int?] = ["A": 4, "B": 4, "C": 4]
calculateAverageGrade(grade1)

let grade2: [String: Int?] = ["A": nil, "B": nil, "C": nil]
calculateAverageGrade(grade2)
```


*Задание №5*
```sh
import Foundation

enum MathOperation {
    case sum(Int, Int)
    case difference(Int, Int)
    case product(Int, Int)
    case square(Int)
    case root(Int)
}

func processOperations(_ operations: [MathOperation]) {
    for operation in operations {
        switch operation {
        case .sum(let a, let b):
            print("Сумма: \(a + b)")
        case .difference(let a, let b):
            print("Разность: \(a - b)")
        case .product(let a, let b):
            print("Произведение: \(a * b)")
        case .square(let a):
            print("Квадрат: \(a * a)")
        case .root(let a):
            print("Корень: \(Int(sqrt(Double(a))))")
        }
    }
}
let chislo1 = [MathOperation.sum(1, 2), MathOperation.square(2)]
processOperations(chislo1)
```


